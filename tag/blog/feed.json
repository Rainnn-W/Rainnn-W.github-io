{
    "version": "https://jsonfeed.org/version/1",
    "title": "Rainnnの • All posts by \"blog\" tag",
    "description": "blingbling~",
    "home_page_url": "https://rainnn-w.github.io",
    "items": [
        {
            "id": "https://rainnn-w.github.io/posts/48639.html",
            "url": "https://rainnn-w.github.io/posts/48639.html",
            "title": "使用Hexo+Github搭建个人博客",
            "date_published": "2022-12-22T08:11:01.000Z",
            "content_html": "<h2 id=\"使用hexogithub搭建个人博客\"><a class=\"anchor\" href=\"#使用hexogithub搭建个人博客\">#</a> 使用 Hexo+Github 搭建个人博客</h2>\n<ul>\n<li>\n<p>什么是 Hexo？</p>\n<p>Hexo 是一个快速、简洁且高效的博客框架，基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p>\n</li>\n<li>\n<p>Hexo+Github 原理：hexo 生成博客页面，部署到 github 的仓库，访问博客相当于访问仓库下的页面</p>\n</li>\n</ul>\n<h3 id=\"一-安装相关环境\"><a class=\"anchor\" href=\"#一-安装相关环境\">#</a> 一、安装相关环境</h3>\n<h4 id=\"1安装nodejs\"><a class=\"anchor\" href=\"#1安装nodejs\">#</a> 1. 安装 Node.js</h4>\n<p>在官网<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\"> Node.js (nodejs.org)</span> 下载</p>\n<p>进入命令行终端输入 <code>node -v </code>     <code>npm -v </code>  查看版本</p>\n<p>(安装过程中默认配置环境变量)</p>\n<h4 id=\"2安装git\"><a class=\"anchor\" href=\"#2安装git\">#</a> 2. 安装 Git</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9naXQtc2NtLmNvbS9kb3dubG9hZHM=\">在官网 https://git-scm.com/downloads</span> 下载</p>\n<p>进入命令行终端输入  <code>git --version </code>  查看版本</p>\n<h4 id=\"3安装hexo框架\"><a class=\"anchor\" href=\"#3安装hexo框架\">#</a> 3. 安装 Hexo 框架</h4>\n<p>使用 npm 一键安装 Hexo 博客程序：</p>\n<p>输入 <code>hexo -v</code>  查看 Hexo 版本</p>\n<h3 id=\"二-使用hexo搭建博客本地\"><a class=\"anchor\" href=\"#二-使用hexo搭建博客本地\">#</a> 二、使用 Hexo 搭建博客（本地）</h3>\n<h4 id=\"1新建一个文件夹-命名为blog\"><a class=\"anchor\" href=\"#1新建一个文件夹-命名为blog\">#</a> 1. 新建一个文件夹 命名为 blog</h4>\n<h4 id=\"2初始化博客\"><a class=\"anchor\" href=\"#2初始化博客\">#</a> 2. 初始化博客</h4>\n<p>在 blog 目录下打开命令行终端</p>\n<p><code>hexo init</code>  初始化一个博客</p>\n<p>等待初始化完成，得到下面的界面：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/1.png\" alt></p>\n<p>打开 blog2 文件夹可以看到生成了很多文件</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/2.png\" alt></p>\n<p>hexo 会默认使用 landscape 这个主题</p>\n<h4 id=\"3启动博客\"><a class=\"anchor\" href=\"#3启动博客\">#</a> 3. 启动博客</h4>\n<p>输入 <code>hexo s</code></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/3.png\" alt></p>\n<p>在浏览器输入 http://localhost:4000/ 即可本地浏览所搭建的博客</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/4.png\" alt></p>\n<h4 id=\"4发布文章\"><a class=\"anchor\" href=\"#4发布文章\">#</a> 4. 发布文章</h4>\n<p>（1）输入  <code>hexo n &quot;My first blog&quot;</code> 即可创建为&quot;My first blog&quot; 的文章</p>\n<p>在 blog/source/_posts 路径可以看到该 markdown 文档，打开并进行编辑即可</p>\n<p>（2）输入   <code>hexo clean</code>  (清理)   <code>hexo g</code> （generate）  <code>hexo s</code> （server）即可在本地浏览博客并查看刚刚发布的文章了</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/6.png\" alt></p>\n<blockquote>\n<p>到这里，本地搭建博客就完成了，但只能在本地查看，公开可以通过将其部署到 Github 仓库中做到，也可以使用 Gitee...</p>\n</blockquote>\n<h3 id=\"三-部署到github上\"><a class=\"anchor\" href=\"#三-部署到github上\">#</a> 三、部署到 Github 上</h3>\n<h4 id=\"1new-repository\"><a class=\"anchor\" href=\"#1new-repository\">#</a> 1.New repository</h4>\n<p>此处 repository name 需要使用   <code>用户名.github.io</code></p>\n<h4 id=\"2安装hexo部署的插件\"><a class=\"anchor\" href=\"#2安装hexo部署的插件\">#</a> 2. 安装 hexo 部署的插件</h4>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-deployer-git --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h4 id=\"3更改_configyml文档\"><a class=\"anchor\" href=\"#3更改_configyml文档\">#</a> 3. 更改_config.yml 文档</h4>\n<p>在 blog 目录下找到_config.yml 文档，修改末尾的 #Deployment 部分</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">deploy:\n  type: git\n  repo: https:&#x2F;&#x2F;github.com&#x2F;用户名&#x2F;用户名.github.io.git\n  branch: main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>（这里的 branch 自己去仓库看一下是 main 还是 master，如果不对应会导致部署失败，踩坑警告！）</p>\n<h4 id=\"4生成ssh密钥\"><a class=\"anchor\" href=\"#4生成ssh密钥\">#</a> 4. 生成 SSH 密钥</h4>\n<p>（1）生成密钥</p>\n<p><code> ssh-keygen -t rsa -C &quot;邮箱&quot;</code></p>\n<p>（2）在 C:\\Users\\ 用户名 \\.ssh 目录下找到 id_rsa.pub 文件，复制文件内所有内容</p>\n<p>（3）在 Github 中打开 settings--SSH and GPG keys --new SSH key</p>\n<blockquote>\n<p>如果此处显示 Key type 选择默认的 Authentication Key</p>\n</blockquote>\n<p>--Title 任取 -- 在 Key 中粘贴之前复制的内容 --Add SHH key</p>\n<p>输入 <code>ssh -T git@github.com</code>  出现以下信息即可</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/7.png\" alt></p>\n<h4 id=\"5部署\"><a class=\"anchor\" href=\"#5部署\">#</a> 5. 部署</h4>\n<p>输入   <code>hexo clean</code>    <code>hexo g</code>     <code>hexo d</code>   (deploy) 即可生成静态文章并部署到个人博客上</p>\n<blockquote>\n<p>首次 hexo d 时会弹出输入 github 的 username 和 password</p>\n</blockquote>\n<h4 id=\"6访问个人博客\"><a class=\"anchor\" href=\"#6访问个人博客\">#</a> 6. 访问个人博客</h4>\n<p>网址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94bi0tZXFyOTI0YXZ4by5naXRodWIuaW8v\">https:// 用户名.github.io/</span></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/8.png\" alt></p>\n<p>好耶！我们成功了！</p>\n<h3 id=\"踩坑预警\"><a class=\"anchor\" href=\"#踩坑预警\">#</a> 踩坑预警</h3>\n<ul>\n<li>\n<p>如何能够使文章中的图片顺利出现在个人博客上呢？</p>\n<p><code>npm install hexo-asset-image -- save</code></p>\n<p>首先请在_config.yml 文档中 #Writing 部分将 <code>post_asset_folder: true </code> 改为 true，这可以在你创建新文章时同时生成文章名.md 文档和文章名同名文件夹</p>\n<p>将文章中的图片放在该文件夹中，在 markdown 文档中使用图片时使用 ./ 文章名 / 图片名称即可</p>\n</li>\n</ul>\n<p>最近发现这个总是会 error loading，还是搞个图床吧</p>\n<blockquote>\n<p>更多功能待开发，更多坑待踩</p>\n</blockquote>\n<h3 id=\"博客中直接插入pdf\"><a class=\"anchor\" href=\"#博客中直接插入pdf\">#</a> 博客中直接插入 pdf</h3>\n<p>1. 安装 hexo-pdf</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install --save hexo-pdf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>在 source 文件夹下创建一个叫 pdf 的文件夹，把 xxx.pdf 文件放在这里，然后在_post 文件夹中的 xxx.md 直接使用</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;% pdf &#x2F;pdf&#x2F;xxx.pdf %&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h3 id=\"优化博客文章链接\"><a class=\"anchor\" href=\"#优化博客文章链接\">#</a> 优化博客文章链接</h3>\n<p>在 Hexo 的默认设定中，文章链接就会是一大串的字符</p>\n<p>解决方法，使用 <code>hexo-abbrlink</code>  插件</p>\n<ol>\n<li>安装 <code>hexo-abbrlink</code> ：</li>\n</ol>\n<p><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-abbrlink <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<ol start=\"2\">\n<li>在 hexo 的配置文件 <code>_config.yml</code> ，修改 <code>url</code> 、 <code>permalink</code>  为（不是主题的配置文件）：</li>\n</ol>\n<p><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">url: https://rainnn-w.github.io\npermalink: posts/:abbrlink.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<ol start=\"3\">\n<li>在 hexo 的配置文件 <code>_config.yml</code>  中添加以下代码（不是主题的配置文件）：</li>\n</ol>\n<p><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span>abbrlink配置</span>\nabbrlink:\n  alg: crc32  # 算法：crc16(default) and crc32\n  rep: dec    # 进制：dec(default) and hex   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>其中 alg 和 rep 为算法和进制，具体区别见下表：</p>\n<table>\n<thead>\n<tr>\n<th>算法</th>\n<th>进制</th>\n<th>生成链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>crc16</td>\n<td>hex</td>\n<td><a href=\"https://rainnn-w.github.io/posts/66c8.html\">https://rainnn-w.github.io/posts/66c8.html</a></td>\n</tr>\n<tr>\n<td>crc16</td>\n<td>dec</td>\n<td><a href=\"https://rainnn-w.github.io/posts/65535.html\">https://rainnn-w.github.io/posts/65535.html</a></td>\n</tr>\n<tr>\n<td>crc32</td>\n<td>hex</td>\n<td><a href=\"https://rainnn-w.github.io/posts/8ddf18fb.html\">https://rainnn-w.github.io/posts/8ddf18fb.html</a></td>\n</tr>\n<tr>\n<td>crc32</td>\n<td>dec</td>\n<td><a href=\"https://rainnn-w.github.io/posts/1690090958.html\">https://rainnn-w.github.io/posts/1690090958.html</a></td>\n</tr>\n</tbody>\n</table>\n<ol start=\"4\">\n<li>修改文件后，执行以下代码部署到 <code>gitee</code>  即可！</li>\n</ol>\n<p><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean \nhexo g\nhexo d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmN1Z2VyLmNuL3AvNjM0NjQyZmQvI0dpdEh1Yi1BY3Rpb24tJUU3JThFJUFGJUU1JUEyJTgzJUU1JThGJTk4JUU5JTg3JThGJUU5JTg1JThEJUU3JUJEJUFF\">Notion2Markdown 联动发布 Hexo 博客 - 自动化部署方案 | 遐说 (cuger.cn)</span></p>\n",
            "tags": [
                "blog"
            ]
        }
    ]
}