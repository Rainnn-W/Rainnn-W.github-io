<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Rainnnの • Posts by &#34;blog&#34; tag</title>
        <link>https://rainnn-w.github.io</link>
        <description>blingbling~</description>
        <language>CN</language>
        <pubDate>Thu, 22 Dec 2022 16:11:01 +0800</pubDate>
        <lastBuildDate>Thu, 22 Dec 2022 16:11:01 +0800</lastBuildDate>
        <category>Java</category>
        <category>c++</category>
        <category>lab</category>
        <category>blog</category>
        <item>
            <guid isPermalink="true">https://rainnn-w.github.io/posts/48639.html</guid>
            <title>使用Hexo+Github搭建个人博客</title>
            <link>https://rainnn-w.github.io/posts/48639.html</link>
            <category>blog</category>
            <pubDate>Thu, 22 Dec 2022 16:11:01 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;使用hexogithub搭建个人博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用hexogithub搭建个人博客&#34;&gt;#&lt;/a&gt; 使用 Hexo+Github 搭建个人博客&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;什么是 Hexo？&lt;/p&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架，基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hexo+Github 原理：hexo 生成博客页面，部署到 github 的仓库，访问博客相当于访问仓库下的页面&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一-安装相关环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-安装相关环境&#34;&gt;#&lt;/a&gt; 一、安装相关环境&lt;/h3&gt;
&lt;h4 id=&#34;1安装nodejs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1安装nodejs&#34;&gt;#&lt;/a&gt; 1. 安装 Node.js&lt;/h4&gt;
&lt;p&gt;在官网&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==&#34;&gt; Node.js (nodejs.org)&lt;/span&gt; 下载&lt;/p&gt;
&lt;p&gt;进入命令行终端输入 &lt;code&gt;node -v &lt;/code&gt;     &lt;code&gt;npm -v &lt;/code&gt;  查看版本&lt;/p&gt;
&lt;p&gt;(安装过程中默认配置环境变量)&lt;/p&gt;
&lt;h4 id=&#34;2安装git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2安装git&#34;&gt;#&lt;/a&gt; 2. 安装 Git&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9naXQtc2NtLmNvbS9kb3dubG9hZHM=&#34;&gt;在官网 https://git-scm.com/downloads&lt;/span&gt; 下载&lt;/p&gt;
&lt;p&gt;进入命令行终端输入  &lt;code&gt;git --version &lt;/code&gt;  查看版本&lt;/p&gt;
&lt;h4 id=&#34;3安装hexo框架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3安装hexo框架&#34;&gt;#&lt;/a&gt; 3. 安装 Hexo 框架&lt;/h4&gt;
&lt;p&gt;使用 npm 一键安装 Hexo 博客程序：&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;hexo -v&lt;/code&gt;  查看 Hexo 版本&lt;/p&gt;
&lt;h3 id=&#34;二-使用hexo搭建博客本地&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-使用hexo搭建博客本地&#34;&gt;#&lt;/a&gt; 二、使用 Hexo 搭建博客（本地）&lt;/h3&gt;
&lt;h4 id=&#34;1新建一个文件夹-命名为blog&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1新建一个文件夹-命名为blog&#34;&gt;#&lt;/a&gt; 1. 新建一个文件夹 命名为 blog&lt;/h4&gt;
&lt;h4 id=&#34;2初始化博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2初始化博客&#34;&gt;#&lt;/a&gt; 2. 初始化博客&lt;/h4&gt;
&lt;p&gt;在 blog 目录下打开命令行终端&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo init&lt;/code&gt;  初始化一个博客&lt;/p&gt;
&lt;p&gt;等待初始化完成，得到下面的界面：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/1.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;打开 blog2 文件夹可以看到生成了很多文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/2.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;hexo 会默认使用 landscape 这个主题&lt;/p&gt;
&lt;h4 id=&#34;3启动博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3启动博客&#34;&gt;#&lt;/a&gt; 3. 启动博客&lt;/h4&gt;
&lt;p&gt;输入 &lt;code&gt;hexo s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/3.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;在浏览器输入 http://localhost:4000/ 即可本地浏览所搭建的博客&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/4.png&#34; alt&gt;&lt;/p&gt;
&lt;h4 id=&#34;4发布文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4发布文章&#34;&gt;#&lt;/a&gt; 4. 发布文章&lt;/h4&gt;
&lt;p&gt;（1）输入  &lt;code&gt;hexo n &amp;quot;My first blog&amp;quot;&lt;/code&gt; 即可创建为&amp;quot;My first blog&amp;quot; 的文章&lt;/p&gt;
&lt;p&gt;在 blog/source/_posts 路径可以看到该 markdown 文档，打开并进行编辑即可&lt;/p&gt;
&lt;p&gt;（2）输入   &lt;code&gt;hexo clean&lt;/code&gt;  (清理)   &lt;code&gt;hexo g&lt;/code&gt; （generate）  &lt;code&gt;hexo s&lt;/code&gt; （server）即可在本地浏览博客并查看刚刚发布的文章了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/6.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;到这里，本地搭建博客就完成了，但只能在本地查看，公开可以通过将其部署到 Github 仓库中做到，也可以使用 Gitee...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;三-部署到github上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-部署到github上&#34;&gt;#&lt;/a&gt; 三、部署到 Github 上&lt;/h3&gt;
&lt;h4 id=&#34;1new-repository&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1new-repository&#34;&gt;#&lt;/a&gt; 1.New repository&lt;/h4&gt;
&lt;p&gt;此处 repository name 需要使用   &lt;code&gt;用户名.github.io&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;2安装hexo部署的插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2安装hexo部署的插件&#34;&gt;#&lt;/a&gt; 2. 安装 hexo 部署的插件&lt;/h4&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;npm install hexo-deployer-git --save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h4 id=&#34;3更改_configyml文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3更改_configyml文档&#34;&gt;#&lt;/a&gt; 3. 更改_config.yml 文档&lt;/h4&gt;
&lt;p&gt;在 blog 目录下找到_config.yml 文档，修改末尾的 #Deployment 部分&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;deploy:
  type: git
  repo: https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;用户名&amp;#x2F;用户名.github.io.git
  branch: main&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;（这里的 branch 自己去仓库看一下是 main 还是 master，如果不对应会导致部署失败，踩坑警告！）&lt;/p&gt;
&lt;h4 id=&#34;4生成ssh密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4生成ssh密钥&#34;&gt;#&lt;/a&gt; 4. 生成 SSH 密钥&lt;/h4&gt;
&lt;p&gt;（1）生成密钥&lt;/p&gt;
&lt;p&gt;&lt;code&gt; ssh-keygen -t rsa -C &amp;quot;邮箱&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（2）在 C:\Users\ 用户名 \.ssh 目录下找到 id_rsa.pub 文件，复制文件内所有内容&lt;/p&gt;
&lt;p&gt;（3）在 Github 中打开 settings--SSH and GPG keys --new SSH key&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果此处显示 Key type 选择默认的 Authentication Key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;--Title 任取 -- 在 Key 中粘贴之前复制的内容 --Add SHH key&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;ssh -T git@github.com&lt;/code&gt;  出现以下信息即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/7.png&#34; alt&gt;&lt;/p&gt;
&lt;h4 id=&#34;5部署&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5部署&#34;&gt;#&lt;/a&gt; 5. 部署&lt;/h4&gt;
&lt;p&gt;输入   &lt;code&gt;hexo clean&lt;/code&gt;    &lt;code&gt;hexo g&lt;/code&gt;     &lt;code&gt;hexo d&lt;/code&gt;   (deploy) 即可生成静态文章并部署到个人博客上&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首次 hexo d 时会弹出输入 github 的 username 和 password&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;6访问个人博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6访问个人博客&#34;&gt;#&lt;/a&gt; 6. 访问个人博客&lt;/h4&gt;
&lt;p&gt;网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94bi0tZXFyOTI0YXZ4by5naXRodWIuaW8v&#34;&gt;https:// 用户名.github.io/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainnn-w/Pictures/blog/8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;好耶！我们成功了！&lt;/p&gt;
&lt;h3 id=&#34;踩坑预警&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#踩坑预警&#34;&gt;#&lt;/a&gt; 踩坑预警&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如何能够使文章中的图片顺利出现在个人博客上呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install hexo-asset-image -- save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首先请在_config.yml 文档中 #Writing 部分将 &lt;code&gt;post_asset_folder: true &lt;/code&gt; 改为 true，这可以在你创建新文章时同时生成文章名.md 文档和文章名同名文件夹&lt;/p&gt;
&lt;p&gt;将文章中的图片放在该文件夹中，在 markdown 文档中使用图片时使用 ./ 文章名 / 图片名称即可&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近发现这个总是会 error loading，还是搞个图床吧&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更多功能待开发，更多坑待踩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;博客中直接插入pdf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#博客中直接插入pdf&#34;&gt;#&lt;/a&gt; 博客中直接插入 pdf&lt;/h3&gt;
&lt;p&gt;1. 安装 hexo-pdf&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;npm install --save hexo-pdf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;在 source 文件夹下创建一个叫 pdf 的文件夹，把 xxx.pdf 文件放在这里，然后在_post 文件夹中的 xxx.md 直接使用&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;#123;% pdf &amp;#x2F;pdf&amp;#x2F;xxx.pdf %&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;优化博客文章链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化博客文章链接&#34;&gt;#&lt;/a&gt; 优化博客文章链接&lt;/h3&gt;
&lt;p&gt;在 Hexo 的默认设定中，文章链接就会是一大串的字符&lt;/p&gt;
&lt;p&gt;解决方法，使用 &lt;code&gt;hexo-abbrlink&lt;/code&gt;  插件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装 &lt;code&gt;hexo-abbrlink&lt;/code&gt; ：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; hexo-abbrlink &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在 hexo 的配置文件 &lt;code&gt;_config.yml&lt;/code&gt; ，修改 &lt;code&gt;url&lt;/code&gt; 、 &lt;code&gt;permalink&lt;/code&gt;  为（不是主题的配置文件）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;url: https://rainnn-w.github.io
permalink: posts/:abbrlink.html&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;在 hexo 的配置文件 &lt;code&gt;_config.yml&lt;/code&gt;  中添加以下代码（不是主题的配置文件）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token title important&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;#&lt;/span&gt;abbrlink配置&lt;/span&gt;
abbrlink:
  alg: crc32  # 算法：crc16(default) and crc32
  rep: dec    # 进制：dec(default) and hex   &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;其中 alg 和 rep 为算法和进制，具体区别见下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算法&lt;/th&gt;
&lt;th&gt;进制&lt;/th&gt;
&lt;th&gt;生成链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;crc16&lt;/td&gt;
&lt;td&gt;hex&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://rainnn-w.github.io/posts/66c8.html&#34;&gt;https://rainnn-w.github.io/posts/66c8.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;crc16&lt;/td&gt;
&lt;td&gt;dec&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://rainnn-w.github.io/posts/65535.html&#34;&gt;https://rainnn-w.github.io/posts/65535.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;crc32&lt;/td&gt;
&lt;td&gt;hex&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://rainnn-w.github.io/posts/8ddf18fb.html&#34;&gt;https://rainnn-w.github.io/posts/8ddf18fb.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;crc32&lt;/td&gt;
&lt;td&gt;dec&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://rainnn-w.github.io/posts/1690090958.html&#34;&gt;https://rainnn-w.github.io/posts/1690090958.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;修改文件后，执行以下代码部署到 &lt;code&gt;gitee&lt;/code&gt;  即可！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo clean 
hexo g
hexo d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmN1Z2VyLmNuL3AvNjM0NjQyZmQvI0dpdEh1Yi1BY3Rpb24tJUU3JThFJUFGJUU1JUEyJTgzJUU1JThGJTk4JUU5JTg3JThGJUU5JTg1JThEJUU3JUJEJUFF&#34;&gt;Notion2Markdown 联动发布 Hexo 博客 - 自动化部署方案 | 遐说 (cuger.cn)&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
